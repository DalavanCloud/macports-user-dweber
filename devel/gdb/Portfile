# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0

name            gdb
version         6.8
revision        2
categories      devel
maintainers     dweber openmaintainer
description     GDB: The GNU Project Debugger

long_description \
GDB, the GNU Project debugger, allows you to see what is going on 'inside' \
another program while it executes -- or what another program was doing at the \
moment it crashed.  GDB can do four main kinds of things (plus other things \
in support of these) to help you catch bugs in the act: \
    a) start your program, specifying anything that might affect its behavior, \
    b) make your program stop on specified conditions, \
    c) examine what has happened, when your program has stopped, \
    d) change things in your program, so you can experiment with correcting \
       the effects of one bug and go on to learn about another. \
The program being debugged can be written in Ada, C, C++, Objective-C, \
Pascal (and many other languages). Those programs might be executing on \
the same machine as GDB (native) or on another machine (remote). GDB \
can run on most popular UNIX and Microsoft Windows variants.

homepage        http://www.gnu.org/software/gdb/
platforms       darwin

master_sites    gnu:gdb

use_bzip2       yes

checksums       md5  c9da266b884fb8fa54df786dfaadbc7a \
                sha1 ba1394d59dd84a1dd3a83322bd82c799596f0bcf \
                rmd160 23fc9442290b6383ce8f943ef1eb117fa06e79fb

depends_lib     port:expat \
                port:gmp \
                port:mpfr \
                port:libiconv

depends_build   port:gcc44 \
                port:coreutils

                #port:gnat-gcc \

# From the binutils port:
# The Makefile runs configure again in subdirectories.
# It correcty passes along most configure variables (CFLAGS, LDFLAGS, ...),
#    but seems to neglect CPPFLAGS.
#build.env       \
                CPP='${prefix}/bin/cpp-mp-4.4' \
                CPPFLAGS='-I${prefix}/include' \
                CC='${prefix}/bin/gcc-mp-4.4' \
                CFLAGS='-O2' \
                CXX='${prefix}/bin/g++-mp-4.4' \
                CXXFLAGS='-O2'  \
                OBJC='${prefix}/bin/gcc-mp-4.4' \
                OBJCFLAGS='-O2' \
                F90FLAGS='-O2' \
                FCFLAGS='-O2' \
                FFLAGS='-O2'  \
                LDFLAGS='-L${prefix}/lib' \
                INSTALL='${prefix}/bin/ginstall -c' \
                AR='${prefix}/bin/gar' \
                NM='${prefix}/bin/gnm' \
                OBJCOPY='${prefix}/bin/gobjcopy' \
                OBJDUMP='${prefix}/bin/gobjdump' \
                RANLIB='${prefix}/bin/granlib' \
                STRIP='${prefix}/bin/gstrip'
                
  #='${prefix}/bin/gaddr2line' \
  #='${prefix}/bin/gc++filt' \
  #='${prefix}/bin/greadelf' \
  #='${prefix}/bin/gsize' \
  #='${prefix}/bin/gstrings' \

configure.env   \
                CPP='${prefix}/bin/cpp-mp-4.4' \
                CPPFLAGS='-I${prefix}/include' \
                CC='${prefix}/bin/gcc-mp-4.4' \
                CFLAGS='-O2' \
                CXX='${prefix}/bin/g++-mp-4.4' \
                CXXFLAGS='-O2'  \
                OBJC='${prefix}/bin/gcc-mp-4.4' \
                OBJCFLAGS='-O2' \
                F90FLAGS='-O2' \
                FCFLAGS='-O2' \
                FFLAGS='-O2'  \
                LDFLAGS='-L${prefix}/lib' \
                INSTALL='${prefix}/bin/ginstall -c' \
                AR='${prefix}/bin/gar' \
                NM='${prefix}/bin/gnm' \
                OBJCOPY='${prefix}/bin/gobjcopy' \
                OBJDUMP='${prefix}/bin/gobjdump' \
                RANLIB='${prefix}/bin/granlib' \
                STRIP='${prefix}/bin/gstrip'


#--target=i686-apple-darwin  # failed
#--target=i386-apple-macos   # failed at BFD
#--target=i686-apple-macos   # failed at BFD

#set targName    i386-bsd
#set targName    i386-apple-darwin9.6.0
set targName    i686-apple-darwin

configure.args-append \
    --build=${targName} \
    --host=${targName} \
    --target=${targName} \
    --prefix=${prefix} \
    --exec-prefix=${prefix}/libexec \
    --infodir=${prefix}/share/info \
    --mandir=${prefix}/share/man \
    --with-docdir=${prefix}/share/doc \
    --with-libexpat-prefix=${prefix}/lib \
    --enable-objc-gc \
    --with-mpfr=${prefix} \
    --with-gmp=${prefix} \
    --with-build-time-tools=${prefix}

    #--enable-bootstrap \

#configure { system "echo ${configure.args}" }

configure {
    system "cd ${worksrcpath} && ./configure ${configure.args} ${configure.env}"
}



# -----------------------------------------------------
# The top level configure help

#[ root@X ~/src/gdb-6.8 ]# ./configure --help
#`configure' configures this package to adapt to many kinds of systems.
#
#Usage: ./configure [OPTION]... [VAR=VALUE]...
#
#To assign environment variables (e.g., CC, CFLAGS...), specify them as
#VAR=VALUE.  See below for descriptions of some of the useful variables.
#
#Defaults for the options are specified in brackets.
#
#Configuration:
#  -h, --help              display this help and exit
#      --help=short        display options specific to this package
#      --help=recursive    display the short help of all the included packages
#  -V, --version           display version information and exit
#  -q, --quiet, --silent   do not print `checking...' messages
#      --cache-file=FILE   cache test results in FILE [disabled]
#  -C, --config-cache      alias for `--cache-file=config.cache'
#  -n, --no-create         do not create output files
#      --srcdir=DIR        find the sources in DIR [configure dir or `..']
#
#Installation directories:
#  --prefix=PREFIX         install architecture-independent files in PREFIX
#			  [/usr/local]
#  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
#			  [PREFIX]
#
#By default, `make install' will install all the files in
#`/usr/local/bin', `/usr/local/lib' etc.  You can specify
#an installation prefix other than `/usr/local' using `--prefix',
#for instance `--prefix=$HOME'.
#
#For better control, use the options below.
#
#Fine tuning of the installation directories:
#  --bindir=DIR           user executables [EPREFIX/bin]
#  --sbindir=DIR          system admin executables [EPREFIX/sbin]
#  --libexecdir=DIR       program executables [EPREFIX/libexec]
#  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
#  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
#  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
#  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
#  --libdir=DIR           object code libraries [EPREFIX/lib]
#  --includedir=DIR       C header files [PREFIX/include]
#  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
#  --infodir=DIR          info documentation [PREFIX/info]
#  --mandir=DIR           man documentation [PREFIX/man]
#
#Program names:
#  --program-prefix=PREFIX            prepend PREFIX to installed program names
#  --program-suffix=SUFFIX            append SUFFIX to installed program names
#  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
#
#System types:
#  --build=BUILD     configure for building on BUILD [guessed]
#  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
#  --target=TARGET   configure for building compilers for TARGET [HOST]
#
#Optional Features:
#  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
#  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
#  --enable-libada         build libada directory
#  --enable-libssp         build libssp directory
#  --enable-stage1-languages[=all]   choose additional languages to build during
#                          stage1.  Mostly useful for compiler development.
#  --enable-objc-gc        enable use of Boehm's garbage collector with the
#                          GNU Objective-C runtime
#  --enable-bootstrap      enable bootstrapping [yes if native build]
#  --enable-serial-[{host,target,build}-]configure
#                          force sequential configuration of
#                          sub-packages for the host, target or build
#                          machine, or all sub-packages
#  --enable-maintainer-mode enable make rules and dependencies not useful
#                          (and sometimes confusing) to the casual installer
#  --enable-stage1-checking[=all]   choose additional checking for stage1
#                          of the compiler
#  --enable-werror         enable -Werror in bootstrap stage2 and later
#
#Optional Packages:
#  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
#  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
#  --with-build-libsubdir=DIR  Directory where to find libraries for build system
#  --with-mpfr-dir=PATH    this option has been REMOVED
#  --with-mpfr=PATH        specify prefix directory for installed MPFR package.
#                          Equivalent to --with-mpfr-include=PATH/include
#                          plus --with-mpfr-lib=PATH/lib
#  --with-mpfr-include=PATH
#                          specify directory for installed MPFR include files
#  --with-mpfr-lib=PATH    specify directory for the installed MPFR library
#  --with-gmp-dir=PATH     this option has been REMOVED
#  --with-gmp=PATH         specify prefix directory for the installed GMP package.
#                          Equivalent to --with-gmp-include=PATH/include
#                          plus --with-gmp-lib=PATH/lib
#  --with-gmp-include=PATH specify directory for installed GMP include files
#  --with-gmp-lib=PATH     specify directory for the installed GMP library
#  --with-build-sysroot=SYSROOT
#                          use sysroot as the system root during the build
#  --with-debug-prefix-map='A=B C=D ...'
#                             map A to B, C to D ... in debug information
#  --with-build-time-tools=PATH
#                          use given path to find target tools during the build
#  --with-datarootdir      use datarootdir as the data root directory.
#  --with-docdir           install documentation in this directory.
#  --with-pdfdir           install pdf in this directory.
#  --with-htmldir          install html in this directory.
#
#Some influential environment variables:
#  CC          C compiler command
#  CFLAGS      C compiler flags
#  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#              nonstandard directory <lib dir>
#  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
#              headers in a nonstandard directory <include dir>
#  CXX         C++ compiler command
#  CXXFLAGS    C++ compiler flags
#  AR          AR for the host
#  AS          AS for the host
#  DLLTOOL     DLLTOOL for the host
#  LD          LD for the host
#  LIPO        LIPO for the host
#  NM          NM for the host
#  RANLIB      RANLIB for the host
#  STRIP       STRIP for the host
#  WINDRES     WINDRES for the host
#  WINDMC      WINDMC for the host
#  OBJCOPY     OBJCOPY for the host
#  OBJDUMP     OBJDUMP for the host
#  CC_FOR_TARGET
#              CC for the target
#  CXX_FOR_TARGET
#              CXX for the target
#  GCC_FOR_TARGET
#              GCC for the target
#  GCJ_FOR_TARGET
#              GCJ for the target
#  GFORTRAN_FOR_TARGET
#              GFORTRAN for the target
#  AR_FOR_TARGET
#              AR for the target
#  AS_FOR_TARGET
#              AS for the target
#  DLLTOOL_FOR_TARGET
#              DLLTOOL for the target
#  LD_FOR_TARGET
#              LD for the target
#  LIPO_FOR_TARGET
#              LIPO for the target
#  NM_FOR_TARGET
#              NM for the target
#  OBJDUMP_FOR_TARGET
#              OBJDUMP for the target
#  RANLIB_FOR_TARGET
#              RANLIB for the target
#  STRIP_FOR_TARGET
#              STRIP for the target
#  WINDRES_FOR_TARGET
#              WINDRES for the target
#  WINDMC_FOR_TARGET
#              WINDMC for the target
#
#Use these variables to override the choices made by `configure' or to help
#it to find libraries and programs with nonstandard names/locations.

